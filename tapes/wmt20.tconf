global {
    ducttape_output="/projects/tir4/users/pfernand/workflows-outputs/qaware-wmt20-v2"
    ducttape_experimental_imports=true
    ducttape_experimental_submitters=true
    submitter="slurm"

    repo=/home/pfernand/repos/qaware-decoding/
    comet_dir=/projects/tir1/users/pfernand/comet-v3/
    bleurt_dir=/projects/tir1/users/pfernand/bleurt/BLEURT-20/
    bleurt_venv=/home/pfernand/repos/qaware-decoding/.bleurt_venv
    mbartqe_dir=/projects/tir1/users/pfernand/mbart-qe/
    openkiwi_model="/projects/tir1/users/pfernand/openkiwi/model_epoch=02-val_PEARSON=0.79.ckpt"
    openkiwi_venv=/home/pfernand/repos/qaware-decoding/.openkiwi_venv

    train_dir=""
    devtest_dir=(
        TargetLang:
            de="/projects/tir1/corpora/sentence-mt/wmt20/en-de/"
            ru="/projects/tir1/corpora/sentence-mt/wmt20/en-ru/"
    )
    
    pretrained_model=(
        TargetLang:
            de="/projects/tir2/users/pfernand/models/wmt19.en-de.joined-dict.single_model/"
            ru="/projects/tir2/users/pfernand/models/wmt19.en-ru.single_model/"
    )
            
    is_multilingual=False
    bpe_type=fastbpe
    use_labelsmooth=False

    src_lang=en
    tgt_lang=(
        TargetLang:
            de="de"
            ru="ru"
    )

    # Decoding Arguments
    infer_batchsize=(
        NBest:
            5=64
            20=32
            50=16
            100=4
            200=2
    )
    sampling=(
        DecodeType:
            beam_search=false
            diverse_siblings=false
            sampling=true
            nucleus_60=true
    )
    sampling_topp=(
        DecodeType:
            beam_search=""
            diverse_siblings=""
            sampling=""
            nucleus_60=0.6
    )
    diversity_rate=(
        DecodeType:
            beam_search=-1
            diverse_siblings=0.5
            sampling=-1
            nucleus_60=-1
    )

    rerank=(
        Rerank:
            false=false
            fixed=fixed
            train=train
    )
    rerank_weights=(
        Rerank:
            false=""
            fixed=(
                RerankMetric:
                    cometsrc="logprob=0 cometsrc=1 transquest=0 mbart-prediction=0 mbart-uncertainty=0 openkiwi=0"
                    transquest="logprob=0 cometsrc=0 transquest=1 mbart-prediction=0 mbart-uncertainty=0 openkiwi=0"
                    mbart_qe="logprob=0 cometsrc=0 transquest=0 mbart-prediction=1 mbart-uncertainty=0 openkiwi=0"
                    openkiwi="logprob=0 cometsrc=0 transquest=0 mbart-prediction=0 mbart-uncertainty=0 openkiwi=1"
            )
            train="logprob=1 cometsrc=0.1 transquest=0.1 mbart-prediction=0.1 mbart-uncertainty=0.1 openkiwi=0.1"
    )
    rerank_eval=(
        Rerank:
            false=""
            fixed=""
            train=(
                RerankEval:
                    bleu="bleu"
                    comet="comet"
                    bleurt="bleurt"
            )
    )

    mbr_metric=(
        MBRMetric:
            bleu="bleu"
            comet="comet"
            bleurt="bleurt"
    )

    nbest=(
        NBest:
            5=5
            20=20
            50=50
            100=100
            200=200
    )

    seed=9
}

plan Baseline {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *)
}

plan Rerank {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: diverse_siblings) * (NBest: 5 20 50 100 200) * (Rerank: fixed) * (RerankMetric: cometsrc transquest)
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: diverse_siblings) * (NBest: 5 20 50 100 200) * (Rerank: train) * (RerankEval: bleu comet bleurt)
}

plan MBRDecoding {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60) * (NBest: 5 20 50) * (MBRDecoding: true) * (MBRMetric: bleu comet)
}

plan MBRLong {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: de) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 100) * (MBRDecoding: true) * (MBRMetric: comet bleurt)
}