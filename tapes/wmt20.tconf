global {
    ducttape_output="/path/to/save/outputs/"
    ducttape_experimental_imports=true
    ducttape_experimental_submitters=true
    submitter="slurm"
    exclude=""

    repo="/path/to/qaware-decode/"
    comet_dir="/path/to/comet/"
    bleurt_dir="/path/to/bleurt/"
    bleurt_venv="/path/to/bleurt/venv/"
    mbartqe_dir="/path/to/mbartqe/"
    openkiwi_model="/path/to/openkiwi/model/"
    openkiwi_venv="/path/to/openkiwi/venv/"

    train_dir=""
    devtest_dir=(
        TargetLang:
            de="/path/to/devtest/de/"
            ru="/path/to/devtest/ru/"
    )
    
    pretrained_model=(
        TargetLang:
            de="/path/to/wmtmodels/wmt19.en-de.joined-dict.single_model/"
            ru="/path/to/wmtmodels/wmt19.en-ru.single_model/"
    )
            
    is_multilingual=False
    bpe_type=fastbpe
    use_labelsmooth=False

    src_lang=en
    tgt_lang=(
        TargetLang:
            de="de"
            ru="ru"
    )

    # Decoding Arguments
    infer_batchsize=(
        NBest:
            5=64
            20=32
            50=16
            100=4
            200=2
    )
    sampling=(
        DecodeType:
            beam_search=false
            sampling=true
            nucleus_60=true
    )
    sampling_topp=(
        DecodeType:
            beam_search=""
            sampling=""
            nucleus_60=0.6
    )
    diversity_rate=(
        DecodeType:
            beam_search=-1
            sampling=-1
            nucleus_60=-1
    )

    rerank=(
        Rerank:
            false=false
            fixed=fixed
            train=train
            oracle=oracle
    )
    rerank_weights=(
        Rerank:
            false=""
            fixed=(
                RerankMetric:
                    cometsrc="logprob=0 cometsrc=1 transquest=0 mbart-prediction=0 mbart-uncertainty=0 openkiwi=0"
                    transquest="logprob=0 cometsrc=0 transquest=1 mbart-prediction=0 mbart-uncertainty=0 openkiwi=0"
                    mbart_qe="logprob=0 cometsrc=0 transquest=0 mbart-prediction=1 mbart-uncertainty=0 openkiwi=0"
                    openkiwi="logprob=0 cometsrc=0 transquest=0 mbart-prediction=0 mbart-uncertainty=0 openkiwi=1"
            )
            train="logprob=1 cometsrc=0.1 transquest=0.1 mbart-prediction=0.1 mbart-uncertainty=0.1 openkiwi=0.1"
            oracle=(
                RerankEval:
                    bleu="bleu=1"
                    comet="comet=1"
                    bleurt="bleurt=1"
            )

    )
    rerank_eval=(
        Rerank:
            false=""
            fixed=""
            train=(
                RerankEval:
                    bleu="bleu"
                    comet="comet"
                    bleurt="bleurt"
            )
            oracle=""
    )

    mbr_metric=(
        MBRMetric:
            bleu="bleu"
            comet="comet"
            bleurt="bleurt"
    )

    mbr_samples=(
        MBRSamples:
            5=5
            20=20
            50=50
            100=100
    )

    nbest=(
        NBest:
            5=5
            20=20
            50=50
            100=100
            200=200
    )

    seed=9
}

plan Baseline {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *)
}

plan Rerank {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 5 20 50 100 200) * (Rerank: fixed) * (RerankMetric: cometsrc transquest mbart_qe openkiwi)
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 5 20 50 100 200) * (Rerank: train) * (RerankEval: bleu comet bleurt)
}

plan MBRDecoding {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 5)   * (MBRSamples: 5) * (MBRDecoding: true) * (MBRMetric: bleurt bleu comet)
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 20)  * (MBRSamples: 20) * (MBRDecoding: true) * (MBRMetric: bleurt bleu comet)
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 50)  * (MBRSamples: 50) * (MBRDecoding: true) * (MBRMetric: bleurt bleu comet)
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 100) * (MBRSamples: 100) * (MBRDecoding: true) * (MBRMetric: bleurt bleu comet)
}

plan TwoStage {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 200) * (Rerank: train) * (RerankEval: bleu) * (MBRSamples: *) * (MBRDecoding: true) * (MBRMetric: bleu)
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 200) * (Rerank: train) * (RerankEval: comet) * (MBRSamples: *) * (MBRDecoding: true) * (MBRMetric: comet)
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 200) * (Rerank: train) * (RerankEval: bleurt) * (MBRSamples: *) * (MBRDecoding: true) * (MBRMetric: bleurt)
}

plan RerankOracle {
    reach ScoreTranslations via (UsePretrained: true) * (TargetLang: *) * (DecodeType: beam_search nucleus_60 sampling) * (NBest: 5 20 50 100 200) * (Rerank: oracle) * (RerankEval: bleu comet bleurt)
}
